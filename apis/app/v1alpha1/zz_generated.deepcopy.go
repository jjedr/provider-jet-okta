//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssignments) DeepCopyInto(out *GroupAssignments) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssignments.
func (in *GroupAssignments) DeepCopy() *GroupAssignments {
	if in == nil {
		return nil
	}
	out := new(GroupAssignments)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupAssignments) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssignmentsList) DeepCopyInto(out *GroupAssignmentsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GroupAssignments, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssignmentsList.
func (in *GroupAssignmentsList) DeepCopy() *GroupAssignmentsList {
	if in == nil {
		return nil
	}
	out := new(GroupAssignmentsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupAssignmentsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssignmentsObservation) DeepCopyInto(out *GroupAssignmentsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssignmentsObservation.
func (in *GroupAssignmentsObservation) DeepCopy() *GroupAssignmentsObservation {
	if in == nil {
		return nil
	}
	out := new(GroupAssignmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssignmentsParameters) DeepCopyInto(out *GroupAssignmentsParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppIDRef != nil {
		in, out := &in.AppIDRef, &out.AppIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.AppIDSelector != nil {
		in, out := &in.AppIDSelector, &out.AppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = make([]GroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssignmentsParameters.
func (in *GroupAssignmentsParameters) DeepCopy() *GroupAssignmentsParameters {
	if in == nil {
		return nil
	}
	out := new(GroupAssignmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssignmentsSpec) DeepCopyInto(out *GroupAssignmentsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssignmentsSpec.
func (in *GroupAssignmentsSpec) DeepCopy() *GroupAssignmentsSpec {
	if in == nil {
		return nil
	}
	out := new(GroupAssignmentsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssignmentsStatus) DeepCopyInto(out *GroupAssignmentsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssignmentsStatus.
func (in *GroupAssignmentsStatus) DeepCopy() *GroupAssignmentsStatus {
	if in == nil {
		return nil
	}
	out := new(GroupAssignmentsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupObservation) DeepCopyInto(out *GroupObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupObservation.
func (in *GroupObservation) DeepCopy() *GroupObservation {
	if in == nil {
		return nil
	}
	out := new(GroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupParameters) DeepCopyInto(out *GroupParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDRef != nil {
		in, out := &in.IDRef, &out.IDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.IDSelector != nil {
		in, out := &in.IDSelector, &out.IDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupParameters.
func (in *GroupParameters) DeepCopy() *GroupParameters {
	if in == nil {
		return nil
	}
	out := new(GroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupsClaimObservation) DeepCopyInto(out *GroupsClaimObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupsClaimObservation.
func (in *GroupsClaimObservation) DeepCopy() *GroupsClaimObservation {
	if in == nil {
		return nil
	}
	out := new(GroupsClaimObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupsClaimParameters) DeepCopyInto(out *GroupsClaimParameters) {
	*out = *in
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupsClaimParameters.
func (in *GroupsClaimParameters) DeepCopy() *GroupsClaimParameters {
	if in == nil {
		return nil
	}
	out := new(GroupsClaimParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwksObservation) DeepCopyInto(out *JwksObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwksObservation.
func (in *JwksObservation) DeepCopy() *JwksObservation {
	if in == nil {
		return nil
	}
	out := new(JwksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwksParameters) DeepCopyInto(out *JwksParameters) {
	*out = *in
	if in.E != nil {
		in, out := &in.E, &out.E
		*out = new(string)
		**out = **in
	}
	if in.Kid != nil {
		in, out := &in.Kid, &out.Kid
		*out = new(string)
		**out = **in
	}
	if in.Kty != nil {
		in, out := &in.Kty, &out.Kty
		*out = new(string)
		**out = **in
	}
	if in.N != nil {
		in, out := &in.N, &out.N
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwksParameters.
func (in *JwksParameters) DeepCopy() *JwksParameters {
	if in == nil {
		return nil
	}
	out := new(JwksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Oauth) DeepCopyInto(out *Oauth) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Oauth.
func (in *Oauth) DeepCopy() *Oauth {
	if in == nil {
		return nil
	}
	out := new(Oauth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Oauth) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthAPIScope) DeepCopyInto(out *OauthAPIScope) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthAPIScope.
func (in *OauthAPIScope) DeepCopy() *OauthAPIScope {
	if in == nil {
		return nil
	}
	out := new(OauthAPIScope)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OauthAPIScope) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthAPIScopeList) DeepCopyInto(out *OauthAPIScopeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OauthAPIScope, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthAPIScopeList.
func (in *OauthAPIScopeList) DeepCopy() *OauthAPIScopeList {
	if in == nil {
		return nil
	}
	out := new(OauthAPIScopeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OauthAPIScopeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthAPIScopeObservation) DeepCopyInto(out *OauthAPIScopeObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthAPIScopeObservation.
func (in *OauthAPIScopeObservation) DeepCopy() *OauthAPIScopeObservation {
	if in == nil {
		return nil
	}
	out := new(OauthAPIScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthAPIScopeParameters) DeepCopyInto(out *OauthAPIScopeParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppIDRef != nil {
		in, out := &in.AppIDRef, &out.AppIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.AppIDSelector != nil {
		in, out := &in.AppIDSelector, &out.AppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthAPIScopeParameters.
func (in *OauthAPIScopeParameters) DeepCopy() *OauthAPIScopeParameters {
	if in == nil {
		return nil
	}
	out := new(OauthAPIScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthAPIScopeSpec) DeepCopyInto(out *OauthAPIScopeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthAPIScopeSpec.
func (in *OauthAPIScopeSpec) DeepCopy() *OauthAPIScopeSpec {
	if in == nil {
		return nil
	}
	out := new(OauthAPIScopeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthAPIScopeStatus) DeepCopyInto(out *OauthAPIScopeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthAPIScopeStatus.
func (in *OauthAPIScopeStatus) DeepCopy() *OauthAPIScopeStatus {
	if in == nil {
		return nil
	}
	out := new(OauthAPIScopeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthList) DeepCopyInto(out *OauthList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Oauth, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthList.
func (in *OauthList) DeepCopy() *OauthList {
	if in == nil {
		return nil
	}
	out := new(OauthList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OauthList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthObservation) DeepCopyInto(out *OauthObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LogoURL != nil {
		in, out := &in.LogoURL, &out.LogoURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SignOnMode != nil {
		in, out := &in.SignOnMode, &out.SignOnMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthObservation.
func (in *OauthObservation) DeepCopy() *OauthObservation {
	if in == nil {
		return nil
	}
	out := new(OauthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthParameters) DeepCopyInto(out *OauthParameters) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AppSettingsJSON != nil {
		in, out := &in.AppSettingsJSON, &out.AppSettingsJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoKeyRotation != nil {
		in, out := &in.AutoKeyRotation, &out.AutoKeyRotation
		*out = new(bool)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.ClientBasicSecretSecretRef != nil {
		in, out := &in.ClientBasicSecretSecretRef, &out.ClientBasicSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientURI != nil {
		in, out := &in.ClientURI, &out.ClientURI
		*out = new(string)
		**out = **in
	}
	if in.ConsentMethod != nil {
		in, out := &in.ConsentMethod, &out.ConsentMethod
		*out = new(string)
		**out = **in
	}
	if in.CustomClientID != nil {
		in, out := &in.CustomClientID, &out.CustomClientID
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.GrantTypes != nil {
		in, out := &in.GrantTypes, &out.GrantTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GroupsClaim != nil {
		in, out := &in.GroupsClaim, &out.GroupsClaim
		*out = make([]GroupsClaimParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.ImplicitAssignment != nil {
		in, out := &in.ImplicitAssignment, &out.ImplicitAssignment
		*out = new(bool)
		**out = **in
	}
	if in.IssuerMode != nil {
		in, out := &in.IssuerMode, &out.IssuerMode
		*out = new(string)
		**out = **in
	}
	if in.Jwks != nil {
		in, out := &in.Jwks, &out.Jwks
		*out = make([]JwksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LoginMode != nil {
		in, out := &in.LoginMode, &out.LoginMode
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginURI != nil {
		in, out := &in.LoginURI, &out.LoginURI
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.LogoURI != nil {
		in, out := &in.LogoURI, &out.LogoURI
		*out = new(string)
		**out = **in
	}
	if in.OmitSecret != nil {
		in, out := &in.OmitSecret, &out.OmitSecret
		*out = new(bool)
		**out = **in
	}
	if in.PolicyURI != nil {
		in, out := &in.PolicyURI, &out.PolicyURI
		*out = new(string)
		**out = **in
	}
	if in.PostLogoutRedirectUris != nil {
		in, out := &in.PostLogoutRedirectUris, &out.PostLogoutRedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RefreshTokenLeeway != nil {
		in, out := &in.RefreshTokenLeeway, &out.RefreshTokenLeeway
		*out = new(float64)
		**out = **in
	}
	if in.RefreshTokenRotation != nil {
		in, out := &in.RefreshTokenRotation, &out.RefreshTokenRotation
		*out = new(string)
		**out = **in
	}
	if in.ResponseTypes != nil {
		in, out := &in.ResponseTypes, &out.ResponseTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SkipGroups != nil {
		in, out := &in.SkipGroups, &out.SkipGroups
		*out = new(bool)
		**out = **in
	}
	if in.SkipUsers != nil {
		in, out := &in.SkipUsers, &out.SkipUsers
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TokenEndpointAuthMethod != nil {
		in, out := &in.TokenEndpointAuthMethod, &out.TokenEndpointAuthMethod
		*out = new(string)
		**out = **in
	}
	if in.TosURI != nil {
		in, out := &in.TosURI, &out.TosURI
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]UsersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WildcardRedirect != nil {
		in, out := &in.WildcardRedirect, &out.WildcardRedirect
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthParameters.
func (in *OauthParameters) DeepCopy() *OauthParameters {
	if in == nil {
		return nil
	}
	out := new(OauthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthSpec) DeepCopyInto(out *OauthSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthSpec.
func (in *OauthSpec) DeepCopy() *OauthSpec {
	if in == nil {
		return nil
	}
	out := new(OauthSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthStatus) DeepCopyInto(out *OauthStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthStatus.
func (in *OauthStatus) DeepCopy() *OauthStatus {
	if in == nil {
		return nil
	}
	out := new(OauthStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsersObservation) DeepCopyInto(out *UsersObservation) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsersObservation.
func (in *UsersObservation) DeepCopy() *UsersObservation {
	if in == nil {
		return nil
	}
	out := new(UsersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsersParameters) DeepCopyInto(out *UsersParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsersParameters.
func (in *UsersParameters) DeepCopy() *UsersParameters {
	if in == nil {
		return nil
	}
	out := new(UsersParameters)
	in.DeepCopyInto(out)
	return out
}
